{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Tremor analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This tutorial shows how to run the tremor pipeline on prepared IMU or gyroscope data to obtain aggregated tremor measures."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load example data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Example IMU data (8 minutes) from a participant of the Personalized Parkinson Project is loaded. The data was prepared as explained in the data preparation tutorial. The prepared data contains both accelerometer and gyroscope data, but only gyroscope data is necessary for running the tremor pipeline."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>time</th>\n",
       "      <th>accelerometer_x</th>\n",
       "      <th>accelerometer_y</th>\n",
       "      <th>accelerometer_z</th>\n",
       "      <th>gyroscope_x</th>\n",
       "      <th>gyroscope_y</th>\n",
       "      <th>gyroscope_z</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.550718</td>\n",
       "      <td>0.574163</td>\n",
       "      <td>-0.273684</td>\n",
       "      <td>-115.670732</td>\n",
       "      <td>32.012195</td>\n",
       "      <td>-26.097561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.01004</td>\n",
       "      <td>0.535885</td>\n",
       "      <td>0.623445</td>\n",
       "      <td>-0.254545</td>\n",
       "      <td>-110.609757</td>\n",
       "      <td>34.634146</td>\n",
       "      <td>-24.695122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.02008</td>\n",
       "      <td>0.504306</td>\n",
       "      <td>0.651675</td>\n",
       "      <td>-0.251675</td>\n",
       "      <td>-103.231708</td>\n",
       "      <td>36.768293</td>\n",
       "      <td>-22.926829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.03012</td>\n",
       "      <td>0.488517</td>\n",
       "      <td>0.686603</td>\n",
       "      <td>-0.265550</td>\n",
       "      <td>-96.280488</td>\n",
       "      <td>38.719512</td>\n",
       "      <td>-21.158537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.04016</td>\n",
       "      <td>0.494258</td>\n",
       "      <td>0.725359</td>\n",
       "      <td>-0.278469</td>\n",
       "      <td>-92.560976</td>\n",
       "      <td>41.280488</td>\n",
       "      <td>-20.304878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72942</th>\n",
       "      <td>730.74468</td>\n",
       "      <td>0.234928</td>\n",
       "      <td>-0.516268</td>\n",
       "      <td>-0.802871</td>\n",
       "      <td>0.975610</td>\n",
       "      <td>-2.256098</td>\n",
       "      <td>2.256098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72943</th>\n",
       "      <td>730.75472</td>\n",
       "      <td>0.245455</td>\n",
       "      <td>-0.514354</td>\n",
       "      <td>-0.806699</td>\n",
       "      <td>0.304878</td>\n",
       "      <td>-1.707317</td>\n",
       "      <td>1.768293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72944</th>\n",
       "      <td>730.76476</td>\n",
       "      <td>0.243541</td>\n",
       "      <td>-0.511005</td>\n",
       "      <td>-0.807177</td>\n",
       "      <td>0.304878</td>\n",
       "      <td>-1.585366</td>\n",
       "      <td>1.890244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72945</th>\n",
       "      <td>730.77480</td>\n",
       "      <td>0.240191</td>\n",
       "      <td>-0.514354</td>\n",
       "      <td>-0.808134</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.280488</td>\n",
       "      <td>1.585366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72946</th>\n",
       "      <td>730.78484</td>\n",
       "      <td>0.243541</td>\n",
       "      <td>-0.511005</td>\n",
       "      <td>-0.808134</td>\n",
       "      <td>-0.060976</td>\n",
       "      <td>-1.036585</td>\n",
       "      <td>1.219512</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>72947 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            time  accelerometer_x  accelerometer_y  accelerometer_z  \\\n",
       "0        0.00000         0.550718         0.574163        -0.273684   \n",
       "1        0.01004         0.535885         0.623445        -0.254545   \n",
       "2        0.02008         0.504306         0.651675        -0.251675   \n",
       "3        0.03012         0.488517         0.686603        -0.265550   \n",
       "4        0.04016         0.494258         0.725359        -0.278469   \n",
       "...          ...              ...              ...              ...   \n",
       "72942  730.74468         0.234928        -0.516268        -0.802871   \n",
       "72943  730.75472         0.245455        -0.514354        -0.806699   \n",
       "72944  730.76476         0.243541        -0.511005        -0.807177   \n",
       "72945  730.77480         0.240191        -0.514354        -0.808134   \n",
       "72946  730.78484         0.243541        -0.511005        -0.808134   \n",
       "\n",
       "       gyroscope_x  gyroscope_y  gyroscope_z  \n",
       "0      -115.670732    32.012195   -26.097561  \n",
       "1      -110.609757    34.634146   -24.695122  \n",
       "2      -103.231708    36.768293   -22.926829  \n",
       "3       -96.280488    38.719512   -21.158537  \n",
       "4       -92.560976    41.280488   -20.304878  \n",
       "...            ...          ...          ...  \n",
       "72942     0.975610    -2.256098     2.256098  \n",
       "72943     0.304878    -1.707317     1.768293  \n",
       "72944     0.304878    -1.585366     1.890244  \n",
       "72945     0.000000    -1.280488     1.585366  \n",
       "72946    -0.060976    -1.036585     1.219512  \n",
       "\n",
       "[72947 rows x 7 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from pathlib import Path\n",
    "from paradigma.util import load_tsdf_dataframe\n",
    "\n",
    "# Set the path to where the prepared data is saved and load the data.\n",
    "# Note: the test data is stored in TSDF, but you can load your data in your own way\n",
    "path_to_data =  Path('../../tests/data')\n",
    "path_to_prepared_data = path_to_data / '1.prepared_data' / 'imu'\n",
    "\n",
    "df_data, metadata_time, metadata_values = load_tsdf_dataframe(path_to_prepared_data, prefix='IMU')\n",
    "\n",
    "df_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 1: Preprocess data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "IMU sensors collect data at a fixed sampling frequency, but the sampling rate is not uniform, causing variation in time differences between timestamps. The [preprocess_imu_data](https://github.com/biomarkersParkinson/paradigma/blob/main/src/paradigma/preprocessing.py#:~:text=preprocess_imu_data) function therefore resamples the timestamps to be uniformly distributed, and then interpolates IMU values at these new timestamps using the original timestamps and corresponding IMU values. By setting `sensor` to 'gyroscope', only gyroscope data is preprocessed and the accelerometer data is removed from the dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The data is resampled to 100 Hz.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>time</th>\n",
       "      <th>gyroscope_x</th>\n",
       "      <th>gyroscope_y</th>\n",
       "      <th>gyroscope_z</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.00</td>\n",
       "      <td>-115.670732</td>\n",
       "      <td>32.012195</td>\n",
       "      <td>-26.097561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.01</td>\n",
       "      <td>-110.636301</td>\n",
       "      <td>34.624710</td>\n",
       "      <td>-24.701537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.02</td>\n",
       "      <td>-103.292766</td>\n",
       "      <td>36.753000</td>\n",
       "      <td>-22.942002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.03</td>\n",
       "      <td>-96.349062</td>\n",
       "      <td>38.692931</td>\n",
       "      <td>-21.175227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.04</td>\n",
       "      <td>-92.585735</td>\n",
       "      <td>41.237328</td>\n",
       "      <td>-20.311531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73074</th>\n",
       "      <td>730.74</td>\n",
       "      <td>1.150220</td>\n",
       "      <td>-2.561552</td>\n",
       "      <td>2.440945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73075</th>\n",
       "      <td>730.75</td>\n",
       "      <td>0.588721</td>\n",
       "      <td>-1.917765</td>\n",
       "      <td>1.948620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73076</th>\n",
       "      <td>730.76</td>\n",
       "      <td>0.270257</td>\n",
       "      <td>-1.626831</td>\n",
       "      <td>1.813725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73077</th>\n",
       "      <td>730.77</td>\n",
       "      <td>0.185022</td>\n",
       "      <td>-1.451942</td>\n",
       "      <td>1.793145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73078</th>\n",
       "      <td>730.78</td>\n",
       "      <td>-0.133645</td>\n",
       "      <td>-1.112332</td>\n",
       "      <td>1.347580</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>73079 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         time  gyroscope_x  gyroscope_y  gyroscope_z\n",
       "0        0.00  -115.670732    32.012195   -26.097561\n",
       "1        0.01  -110.636301    34.624710   -24.701537\n",
       "2        0.02  -103.292766    36.753000   -22.942002\n",
       "3        0.03   -96.349062    38.692931   -21.175227\n",
       "4        0.04   -92.585735    41.237328   -20.311531\n",
       "...       ...          ...          ...          ...\n",
       "73074  730.74     1.150220    -2.561552     2.440945\n",
       "73075  730.75     0.588721    -1.917765     1.948620\n",
       "73076  730.76     0.270257    -1.626831     1.813725\n",
       "73077  730.77     0.185022    -1.451942     1.793145\n",
       "73078  730.78    -0.133645    -1.112332     1.347580\n",
       "\n",
       "[73079 rows x 4 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from paradigma.config import IMUConfig\n",
    "from paradigma.preprocessing import preprocess_imu_data\n",
    "\n",
    "config = IMUConfig()\n",
    "print(f'The data is resampled to {config.sampling_frequency} Hz.')\n",
    "\n",
    "df_preprocessed_data = preprocess_imu_data(df_data, config, sensor='gyroscope', watch_side='left')\n",
    "\n",
    "df_preprocessed_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 2: Extract tremor features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The function [`extract_tremor_features`](https://github.com/biomarkersParkinson/paradigma/blob/main/src/paradigma/pipelines/tremor_pipeline.py#:~:text=extract_tremor_features) extracts windows from the preprocessed gyroscope data using non-overlapping windows of length `config.window_length_s`. Next, from these windows the tremor features are extracted: 12 mel-frequency cepstral coefficients (MFCCs), frequency of the peak in the power spectral density, power below tremor (0.5 - 3 Hz), and power around the tremor peak. The latter is not used for tremor detection, but to compute aggregate measures of tremor power in Step 4."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The window length is 4 seconds\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>time</th>\n",
       "      <th>mfcc_1</th>\n",
       "      <th>mfcc_2</th>\n",
       "      <th>mfcc_3</th>\n",
       "      <th>mfcc_4</th>\n",
       "      <th>mfcc_5</th>\n",
       "      <th>mfcc_6</th>\n",
       "      <th>mfcc_7</th>\n",
       "      <th>mfcc_8</th>\n",
       "      <th>mfcc_9</th>\n",
       "      <th>mfcc_10</th>\n",
       "      <th>mfcc_11</th>\n",
       "      <th>mfcc_12</th>\n",
       "      <th>freq_peak</th>\n",
       "      <th>below_tremor_power</th>\n",
       "      <th>tremor_power</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>11.407993</td>\n",
       "      <td>1.854440</td>\n",
       "      <td>0.335866</td>\n",
       "      <td>0.319960</td>\n",
       "      <td>0.026209</td>\n",
       "      <td>0.071381</td>\n",
       "      <td>0.118471</td>\n",
       "      <td>0.116478</td>\n",
       "      <td>-0.029843</td>\n",
       "      <td>0.052588</td>\n",
       "      <td>-0.053722</td>\n",
       "      <td>0.012292</td>\n",
       "      <td>1.00</td>\n",
       "      <td>13277.614531</td>\n",
       "      <td>1020.094627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.0</td>\n",
       "      <td>10.043115</td>\n",
       "      <td>2.011087</td>\n",
       "      <td>0.462899</td>\n",
       "      <td>0.468260</td>\n",
       "      <td>-0.110635</td>\n",
       "      <td>0.151994</td>\n",
       "      <td>-0.078799</td>\n",
       "      <td>0.112665</td>\n",
       "      <td>0.081837</td>\n",
       "      <td>0.037202</td>\n",
       "      <td>-0.034632</td>\n",
       "      <td>-0.042053</td>\n",
       "      <td>1.25</td>\n",
       "      <td>1310.703842</td>\n",
       "      <td>87.538668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8.0</td>\n",
       "      <td>8.877666</td>\n",
       "      <td>2.008945</td>\n",
       "      <td>0.485860</td>\n",
       "      <td>0.274370</td>\n",
       "      <td>0.064770</td>\n",
       "      <td>-0.149113</td>\n",
       "      <td>-0.130340</td>\n",
       "      <td>0.050427</td>\n",
       "      <td>0.023477</td>\n",
       "      <td>0.096070</td>\n",
       "      <td>0.074539</td>\n",
       "      <td>0.020284</td>\n",
       "      <td>3.50</td>\n",
       "      <td>215.567337</td>\n",
       "      <td>56.805816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12.0</td>\n",
       "      <td>10.554189</td>\n",
       "      <td>2.206457</td>\n",
       "      <td>0.528599</td>\n",
       "      <td>0.410778</td>\n",
       "      <td>0.012854</td>\n",
       "      <td>0.101787</td>\n",
       "      <td>0.085519</td>\n",
       "      <td>0.102281</td>\n",
       "      <td>0.073039</td>\n",
       "      <td>0.094114</td>\n",
       "      <td>-0.044519</td>\n",
       "      <td>0.073097</td>\n",
       "      <td>1.00</td>\n",
       "      <td>7808.868582</td>\n",
       "      <td>566.219495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>16.0</td>\n",
       "      <td>11.051087</td>\n",
       "      <td>1.628075</td>\n",
       "      <td>0.159574</td>\n",
       "      <td>0.268279</td>\n",
       "      <td>0.110523</td>\n",
       "      <td>0.146418</td>\n",
       "      <td>0.176130</td>\n",
       "      <td>0.087930</td>\n",
       "      <td>-0.038643</td>\n",
       "      <td>0.035997</td>\n",
       "      <td>-0.017965</td>\n",
       "      <td>0.020223</td>\n",
       "      <td>1.00</td>\n",
       "      <td>3945.127377</td>\n",
       "      <td>174.899788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>708.0</td>\n",
       "      <td>6.180462</td>\n",
       "      <td>1.558660</td>\n",
       "      <td>0.520806</td>\n",
       "      <td>0.407299</td>\n",
       "      <td>-0.126574</td>\n",
       "      <td>0.131888</td>\n",
       "      <td>0.040739</td>\n",
       "      <td>-0.007852</td>\n",
       "      <td>-0.034759</td>\n",
       "      <td>-0.012127</td>\n",
       "      <td>-0.048380</td>\n",
       "      <td>0.056300</td>\n",
       "      <td>2.50</td>\n",
       "      <td>4.952011</td>\n",
       "      <td>0.397532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>712.0</td>\n",
       "      <td>8.949686</td>\n",
       "      <td>1.759538</td>\n",
       "      <td>0.146314</td>\n",
       "      <td>0.258097</td>\n",
       "      <td>0.012388</td>\n",
       "      <td>0.210405</td>\n",
       "      <td>0.096675</td>\n",
       "      <td>0.086521</td>\n",
       "      <td>0.094405</td>\n",
       "      <td>0.086109</td>\n",
       "      <td>0.081392</td>\n",
       "      <td>0.072370</td>\n",
       "      <td>1.00</td>\n",
       "      <td>570.735779</td>\n",
       "      <td>32.044727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>716.0</td>\n",
       "      <td>6.618968</td>\n",
       "      <td>1.476363</td>\n",
       "      <td>0.332030</td>\n",
       "      <td>-0.039835</td>\n",
       "      <td>-0.085920</td>\n",
       "      <td>0.072537</td>\n",
       "      <td>0.069817</td>\n",
       "      <td>0.130373</td>\n",
       "      <td>-0.043866</td>\n",
       "      <td>0.003158</td>\n",
       "      <td>-0.052160</td>\n",
       "      <td>0.038509</td>\n",
       "      <td>1.00</td>\n",
       "      <td>3.990732</td>\n",
       "      <td>1.261435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>720.0</td>\n",
       "      <td>6.274967</td>\n",
       "      <td>1.592159</td>\n",
       "      <td>0.146655</td>\n",
       "      <td>0.111758</td>\n",
       "      <td>-0.087665</td>\n",
       "      <td>-0.046542</td>\n",
       "      <td>0.111900</td>\n",
       "      <td>0.018244</td>\n",
       "      <td>-0.041603</td>\n",
       "      <td>-0.097095</td>\n",
       "      <td>-0.061765</td>\n",
       "      <td>0.045770</td>\n",
       "      <td>2.50</td>\n",
       "      <td>3.638188</td>\n",
       "      <td>1.217930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>724.0</td>\n",
       "      <td>6.384021</td>\n",
       "      <td>1.438339</td>\n",
       "      <td>0.099644</td>\n",
       "      <td>0.061810</td>\n",
       "      <td>-0.184136</td>\n",
       "      <td>-0.016639</td>\n",
       "      <td>-0.052482</td>\n",
       "      <td>0.006177</td>\n",
       "      <td>0.099365</td>\n",
       "      <td>-0.059942</td>\n",
       "      <td>-0.016524</td>\n",
       "      <td>-0.010869</td>\n",
       "      <td>3.00</td>\n",
       "      <td>1.664200</td>\n",
       "      <td>1.054432</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>182 rows Ã— 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      time     mfcc_1    mfcc_2    mfcc_3    mfcc_4    mfcc_5    mfcc_6  \\\n",
       "0      0.0  11.407993  1.854440  0.335866  0.319960  0.026209  0.071381   \n",
       "1      4.0  10.043115  2.011087  0.462899  0.468260 -0.110635  0.151994   \n",
       "2      8.0   8.877666  2.008945  0.485860  0.274370  0.064770 -0.149113   \n",
       "3     12.0  10.554189  2.206457  0.528599  0.410778  0.012854  0.101787   \n",
       "4     16.0  11.051087  1.628075  0.159574  0.268279  0.110523  0.146418   \n",
       "..     ...        ...       ...       ...       ...       ...       ...   \n",
       "177  708.0   6.180462  1.558660  0.520806  0.407299 -0.126574  0.131888   \n",
       "178  712.0   8.949686  1.759538  0.146314  0.258097  0.012388  0.210405   \n",
       "179  716.0   6.618968  1.476363  0.332030 -0.039835 -0.085920  0.072537   \n",
       "180  720.0   6.274967  1.592159  0.146655  0.111758 -0.087665 -0.046542   \n",
       "181  724.0   6.384021  1.438339  0.099644  0.061810 -0.184136 -0.016639   \n",
       "\n",
       "       mfcc_7    mfcc_8    mfcc_9   mfcc_10   mfcc_11   mfcc_12  freq_peak  \\\n",
       "0    0.118471  0.116478 -0.029843  0.052588 -0.053722  0.012292       1.00   \n",
       "1   -0.078799  0.112665  0.081837  0.037202 -0.034632 -0.042053       1.25   \n",
       "2   -0.130340  0.050427  0.023477  0.096070  0.074539  0.020284       3.50   \n",
       "3    0.085519  0.102281  0.073039  0.094114 -0.044519  0.073097       1.00   \n",
       "4    0.176130  0.087930 -0.038643  0.035997 -0.017965  0.020223       1.00   \n",
       "..        ...       ...       ...       ...       ...       ...        ...   \n",
       "177  0.040739 -0.007852 -0.034759 -0.012127 -0.048380  0.056300       2.50   \n",
       "178  0.096675  0.086521  0.094405  0.086109  0.081392  0.072370       1.00   \n",
       "179  0.069817  0.130373 -0.043866  0.003158 -0.052160  0.038509       1.00   \n",
       "180  0.111900  0.018244 -0.041603 -0.097095 -0.061765  0.045770       2.50   \n",
       "181 -0.052482  0.006177  0.099365 -0.059942 -0.016524 -0.010869       3.00   \n",
       "\n",
       "     below_tremor_power  tremor_power  \n",
       "0          13277.614531   1020.094627  \n",
       "1           1310.703842     87.538668  \n",
       "2            215.567337     56.805816  \n",
       "3           7808.868582    566.219495  \n",
       "4           3945.127377    174.899788  \n",
       "..                  ...           ...  \n",
       "177            4.952011      0.397532  \n",
       "178          570.735779     32.044727  \n",
       "179            3.990732      1.261435  \n",
       "180            3.638188      1.217930  \n",
       "181            1.664200      1.054432  \n",
       "\n",
       "[182 rows x 16 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from paradigma.config import TremorConfig\n",
    "from paradigma.pipelines.tremor_pipeline import extract_tremor_features\n",
    "\n",
    "config = TremorConfig(step='features')\n",
    "print(f'The window length is {config.window_length_s} seconds')\n",
    "\n",
    "df_features = extract_tremor_features(df_preprocessed_data, config)\n",
    "\n",
    "df_features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 3: Detect tremor"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The function [`detect_tremor`](https://github.com/biomarkersParkinson/paradigma/blob/main/src/paradigma/pipelines/tremor_pipeline.py#:~:text=detect_tremor) uses a pretrained logistic regression classifier to predict the tremor probability (`pred_tremor_proba`) for each window, based on the MFCCs. Using the prespecified threshold, a tremor label of 0 (no tremor) or 1 (tremor) is assigned (`pred_tremor_logreg`). Furthermore, the detected tremor windows are checked for rest tremor in two ways. First, the frequency of the peak should be between 3-7 Hz. Second, we want to exclude windows with significant arm movements. We consider a window to have significant arm movement if `below_tremor_power` exceeds `config.movement_threshold`. The final tremor label is saved in `pred_tremor_checked`. A label for predicted arm at rest (`pred_arm_at_rest`, which is 1 when at rest and 0 when not at rest) was also saved, to control for the amount of arm movement during the observed time period when aggregating the amount of tremor time in Step 4 (if a person is moving their arm, they cannot have rest tremor)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A threshold of 50 degÂ²/sÂ² is used to determine whether the arm is at rest or in stable posture.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>time</th>\n",
       "      <th>pred_tremor_proba</th>\n",
       "      <th>pred_tremor_logreg</th>\n",
       "      <th>pred_arm_at_rest</th>\n",
       "      <th>pred_tremor_checked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.001765</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.0</td>\n",
       "      <td>0.001402</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8.0</td>\n",
       "      <td>0.001146</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12.0</td>\n",
       "      <td>0.001356</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>16.0</td>\n",
       "      <td>0.001618</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>708.0</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>712.0</td>\n",
       "      <td>0.003822</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>716.0</td>\n",
       "      <td>0.001298</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>720.0</td>\n",
       "      <td>0.001217</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>724.0</td>\n",
       "      <td>0.005037</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>182 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      time  pred_tremor_proba  pred_tremor_logreg  pred_arm_at_rest  \\\n",
       "0      0.0           0.001765                   0                 0   \n",
       "1      4.0           0.001402                   0                 0   \n",
       "2      8.0           0.001146                   0                 0   \n",
       "3     12.0           0.001356                   0                 0   \n",
       "4     16.0           0.001618                   0                 0   \n",
       "..     ...                ...                 ...               ...   \n",
       "177  708.0           0.000136                   0                 1   \n",
       "178  712.0           0.003822                   0                 0   \n",
       "179  716.0           0.001298                   0                 1   \n",
       "180  720.0           0.001217                   0                 1   \n",
       "181  724.0           0.005037                   0                 1   \n",
       "\n",
       "     pred_tremor_checked  \n",
       "0                      0  \n",
       "1                      0  \n",
       "2                      0  \n",
       "3                      0  \n",
       "4                      0  \n",
       "..                   ...  \n",
       "177                    0  \n",
       "178                    0  \n",
       "179                    0  \n",
       "180                    0  \n",
       "181                    0  \n",
       "\n",
       "[182 rows x 5 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from importlib.resources import files\n",
    "from paradigma.pipelines.tremor_pipeline import detect_tremor\n",
    "\n",
    "print(f'A threshold of {config.movement_threshold} deg\\u00b2/s\\u00b2 is used to determine whether the arm is at rest or in stable posture.')\n",
    "\n",
    "# Load the pre-trained logistic regression classifier\n",
    "tremor_detection_classifier_package_filename = 'tremor_detection_clf_package.pkl'\n",
    "full_path_to_classifier_package = files('paradigma') / 'assets' / tremor_detection_classifier_package_filename\n",
    "\n",
    "# Use the logistic regression classifier to detect tremor and check for rest tremor\n",
    "df_predictions = detect_tremor(df_features, config, full_path_to_classifier_package)\n",
    "\n",
    "df_predictions[['time','pred_tremor_proba','pred_tremor_logreg','pred_arm_at_rest','pred_tremor_checked']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 4: Compute aggregated tremor measures"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The final step is to compute the amount of tremor time and tremor power with the function [`aggregate_tremor`](https://github.com/biomarkersParkinson/paradigma/blob/main/src/paradigma/pipelines/tremor_pipeline.py#:~:text=aggregate_tremor), which aggregates over all windows in the input dataframe. Tremor time is calculated as the number of detected tremor windows, as percentage of the number of windows while the arm is at rest or in stable posture (when `below_tremor_power` does not exceed `config.movement_threshold`). This way the tremor time is controlled for the amount of time the arm is at rest or in stable posture, when rest tremor and re-emergent tremor could occur. For tremor power the following aggregates are derived: the mode, median and 90th percentile of tremor power (specified in `config.aggregates_tremor_power`). The median and modal tremor power reflect the typical tremor severity, whereas the 90th percentile reflects the maximal tremor severity within the observed timeframe. The aggregated tremor measures and metadata are stored in a json file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Besides the modal tremor power the following tremor power aggregates are derived: ['mode', 'median', '90p'].\n",
      "{'aggregated_tremor_measures': {'90p_tremor_power': 0.8001855655603451,\n",
      "                                'median_tremor_power': 0.4242462829851676,\n",
      "                                'modal_tremor_power': 0.42,\n",
      "                                'perc_windows_tremor': 16.853932584269664},\n",
      " 'metadata': {'nr_windows_rest': 89, 'nr_windows_total': 182}}\n"
     ]
    }
   ],
   "source": [
    "import pprint\n",
    "from paradigma.pipelines.tremor_pipeline import aggregate_tremor\n",
    "\n",
    "print(f'Besides the modal tremor power the following tremor power aggregates are derived: {config.aggregates_tremor_power}.')\n",
    "\n",
    "d_tremor_aggregates = aggregate_tremor(df_predictions, config)\n",
    "\n",
    "pprint.pprint(d_tremor_aggregates)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "paradigma-cfWEGyqZ-py3.11",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
