name: Build and test

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_call:
    outputs:
      version:
        description: "The version retrieved from the pyproject.toml file."
        value: ${{ jobs.build-and-test.outputs.version }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Get the version from pyproject.toml
      # This will be used to tag the release in the publishing workflow
      - name: Install toml package
        run: pip install toml
      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          echo Version: $VERSION
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Install project dependencies
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install

      # Run pre-commit hooks (formatting, linting, YAML checks, etc.)
      - name: Run pre-commit hooks
        run: poetry run pre-commit run --all-files --show-diff-on-failure

      # Run tests
      - name: Run pytest
        run: poetry run pytest --maxfail=1 --disable-warnings -q

      # Static type checks
      - name: Type check with pytype
        run: poetry run pytype .

      # Build the package
      - name: Build package
        run: poetry build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/release'
        with:
          name: build-artifacts
          path: dist/

      # Build and archive documentation
      - name: Build documentation
        run: poetry run make html --directory docs

      - name: Archive documentation
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/release'
        with:
          name: docs-html
          path: docs/build/html/
